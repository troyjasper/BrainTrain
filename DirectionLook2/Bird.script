local DIR = {
	UP = 1,
	DOWN = 2,
	LEFT = 3, 
	RIGHT = 4
}
local orientation = 1;
local width, height = window.get_size()
local sprite_url = nil
local bird_size = nil
local score

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	sprite_url = msg.url("#sprite")
	bird_size = go.get("#sprite", "size")
	replace(self)
	
end

function set_location(self)
	local newx = math.random( bird_size.x , (width - bird_size.x) )
	local newy = math.random( bird_size.y , (height - bird_size.y) )
	go.set_position( vmath.vector3(newx, newy, 0) )
end

function set_orientation(self)
	orientation = math.random(4)

	if orientation == 1 then
		sprite.play_flipbook(sprite_url, "up")
	elseif orientation == 2 then
		sprite.play_flipbook(sprite_url, "down")
	elseif orientation == 3 then
		sprite.play_flipbook(sprite_url, "left")
	elseif orientation == 4 then
		sprite.play_flipbook(sprite_url, "right")
	end
end

function replace(self)
	set_location(self)
	set_orientation(self)	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function score(self, input)
	
end

function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed then
		replace(self)
	end
	if action_id == hash("up") and action.pressed then
		score(self, action_id)
		replace(self)
	end
	if action_id == hash("down") and action.pressed then
		replace(self)
	end
	if action_id == hash("left") and action.pressed then
		replace(self)
	end
	if action_id == hash("right") and action.pressed then
		replace(self)
	end
end